{"ast":null,"code":"var _jsxFileName = \"/Users/simonebrown/SeniorDesign/stonks-front-end/src/Table.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nfunction createData(name, ticker, sentiment) {\n  return {\n    name,\n    ticker,\n    sentiment\n  };\n}\n\nconst rows = [createData('3M', 'MMM', 0), createData('American Express', 'AXP', 0), createData('Apple', 'AAPL', 0), createData('Boeing', 'BA', 0), createData('Caterpillar', 'CAT', 10), createData('Chevron', 'CVX', 0), createData('Cisco', 'CSCO', 0), createData('Coca-Cola', 'KO', 0), createData('The Walt Disney Company', 'DIS', 0), createData('DowDuPont', 'DD', 0), createData('ExxonMobil', 'XOM', 0), createData('General Electric', 'GE', 5), createData('Goldman Sachs', 'GS', 0), createData('The Home Depot', 'HD', 0), createData('IBM', 'IBM', 0), createData('Intel', 'INTC', 0), createData('Johnson & Johnson', 'JNJ', 0), createData('JPMorgan Chase', 'JPM', 0), createData('McDonalds', 'MCD', 0), createData('Merck', 'MRK', 0), createData('Microsoft', 'MSFT', 4), createData('Nike', 'NKE', 0), createData('Pfizer', 'PFE', 0), createData('Procter & Gamble', 'PG', 0), createData('Travelers Companies', 'TRV', 0), createData('United Technologies', 'UTX', 0), createData('UnitedHealth', 'UNH', 0), createData('Verizon', 'VZ', 0), createData('Visa', 'V', 0), createData('Wal-Mart', 'WMT', 0)];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: 'name',\n  numeric: false,\n  disablePadding: true,\n  label: 'Company Name',\n  fontWeight: 'bold'\n}, {\n  id: 'ticker',\n  numeric: false,\n  disablePadding: false,\n  label: 'Ticker'\n}, {\n  id: 'sentiment',\n  numeric: true,\n  disablePadding: false,\n  label: 'Overall Sentiment'\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n\n    /*onSelectAllClick,*/\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: rowCount > 0 && numSelected === rowCount //onChange={onSelectAllClick}\n    ,\n    inputProps: {\n      'aria-label': 'select all desserts'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), headCells.map(headCell => React.createElement(TableCell, {\n    key: headCell.id,\n    align: headCell.numeric ? 'right' : 'left',\n    padding: headCell.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === headCell.id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: orderBy === headCell.id ? order : 'asc',\n    onClick: createSortHandler(headCell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, headCell.label, orderBy === headCell.id ? React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  //onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: '1 1 100%'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const {\n    numSelected\n  } = props;\n  return React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h3\",\n    id: \"tableTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"STONKS\"), numSelected > 0 ? React.createElement(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }))) : React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(FilterListIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('sentiment');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(30);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  }; // const handleSelectAllClick = event => {\n  //   if (event.target.checked) {\n  //     const newSelecteds = rows.map(n => n.name);\n  //     setSelected(newSelecteds);\n  //     return;\n  //   }\n  //   setSelected([]);\n  // };\n\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  }; // const handleChangeRowsPerPage = event => {\n  //   setRowsPerPage(parseInt(event.target.value, 10));\n  //   setPage(0);\n  // };\n\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, React.createElement(EnhancedTableToolbar, {\n    numSelected: selected.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }), React.createElement(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: dense ? 'small' : 'medium',\n    \"aria-label\": \"enhanced table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy //onSelectAllClick={handleSelectAllClick}\n    ,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, stableSort(rows, getComparator(order, orderBy)) //   .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n  .map((row, index) => {\n    const isItemSelected = isSelected(row.name);\n    const labelId = `enhanced-table-checkbox-${index}`;\n    return React.createElement(TableRow, {\n      hover: true,\n      onClick: event => handleClick(event, row.name),\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.name,\n      selected: isItemSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: isItemSelected,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    })), React.createElement(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, row.name), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, row.ticker), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, row.sentiment));\n  }), emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: (dense ? 33 : 53) * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }))))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 20, 30],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage // onChangeRowsPerPage={handleChangeRowsPerPage}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  })), React.createElement(FormControlLabel, {\n    control: React.createElement(Switch, {\n      checked: dense,\n      onChange: handleChangeDense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }),\n    label: \"Dense padding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/simonebrown/SeniorDesign/stonks-front-end/src/Table.js"],"names":["React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","createData","name","ticker","sentiment","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","fontWeight","EnhancedTableHead","props","classes","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","padding","position","top","EnhancedTable","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","isAsc","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeDense","target","checked","isSelected","emptyRows","Math","min","row","isItemSelected","labelId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\n\nfunction createData(name, ticker, sentiment) {\n    return { name, ticker, sentiment };\n  }\n  \n  const rows = [\n    createData('3M', 'MMM', 0),\n    createData('American Express', 'AXP', 0),\n    createData('Apple', 'AAPL', 0),\n    createData('Boeing', 'BA', 0),\n    createData('Caterpillar', 'CAT', 10),\n    createData('Chevron', 'CVX', 0),\n    createData('Cisco', 'CSCO', 0),\n    createData('Coca-Cola', 'KO', 0),\n    createData('The Walt Disney Company', 'DIS', 0),\n    createData('DowDuPont', 'DD', 0),\n    createData('ExxonMobil', 'XOM', 0),\n    createData('General Electric', 'GE', 5),\n    createData('Goldman Sachs', 'GS', 0),\n    createData('The Home Depot', 'HD', 0),\n    createData('IBM', 'IBM', 0),\n    createData('Intel', 'INTC', 0),\n    createData('Johnson & Johnson', 'JNJ', 0),\n    createData('JPMorgan Chase', 'JPM', 0),\n    createData('McDonalds', 'MCD', 0),\n    createData('Merck', 'MRK', 0),\n    createData('Microsoft', 'MSFT', 4),\n    createData('Nike', 'NKE', 0),\n    createData('Pfizer', 'PFE', 0),\n    createData('Procter & Gamble', 'PG', 0),\n    createData('Travelers Companies', 'TRV', 0),\n    createData('United Technologies', 'UTX', 0),\n    createData('UnitedHealth', 'UNH', 0),\n    createData('Verizon', 'VZ', 0),\n    createData('Visa', 'V', 0),\n    createData('Wal-Mart', 'WMT', 0),\n  ];\n  \n  \n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n  }\n  \n  const headCells = [\n    { id: 'name', numeric: false, disablePadding: true, label: 'Company Name', fontWeight: 'bold' },\n    { id: 'ticker', numeric: false, disablePadding: false, label: 'Ticker' },\n    { id: 'sentiment', numeric: true, disablePadding: false, label: 'Overall Sentiment' },\n  ];\n  \n  function EnhancedTableHead(props) {\n    const { classes, /*onSelectAllClick,*/ order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = property => event => {\n      onRequestSort(event, property);\n    };\n  \n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              //onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell>\n          {headCells.map(headCell => (\n            <TableCell\n              key={headCell.id}\n              align={headCell.numeric ? 'right' : 'left'}\n              padding={headCell.disablePadding ? 'none' : 'default'}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <span className={classes.visuallyHidden}>\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                  </span>\n                ) : null}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n  \n  EnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    //onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n  };\n  \n  const useToolbarStyles = makeStyles(theme => ({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1),\n    },\n    highlight:\n      theme.palette.type === 'light'\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n          }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n          },\n    title: {\n      flex: '1 1 100%',\n    },\n  }));\n  \n  const EnhancedTableToolbar = props => {\n    const classes = useToolbarStyles();\n    const { numSelected } = props;\n  \n    return (\n      <Toolbar\n        className={clsx(classes.root, {\n          [classes.highlight]: numSelected > 0,\n        })}\n      >\n        {numSelected > 0 ? (\n          <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : ( \n          <Typography className={classes.title} variant=\"h3\" id=\"tableTitle\">\n            STONKS\n          </Typography>\n        )}\n  \n        {numSelected > 0 ? (\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"delete\">\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : ( \n          <Tooltip title=\"Filter list\">\n            <IconButton aria-label=\"filter list\">\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </Toolbar>\n    );\n  };\n  \n  EnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n  };\n  \n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n  }));\n  \n  export default function EnhancedTable() {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('sentiment');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(30);\n  \n    const handleRequestSort = (event, property) => {\n      const isAsc = orderBy === property && order === 'asc';\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(property);\n    };\n  \n    // const handleSelectAllClick = event => {\n    //   if (event.target.checked) {\n    //     const newSelecteds = rows.map(n => n.name);\n    //     setSelected(newSelecteds);\n    //     return;\n    //   }\n    //   setSelected([]);\n    // };\n  \n    const handleClick = (event, name) => {\n      const selectedIndex = selected.indexOf(name);\n      let newSelected = [];\n  \n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, name);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n          selected.slice(0, selectedIndex),\n          selected.slice(selectedIndex + 1),\n        );\n      }\n  \n      setSelected(newSelected);\n    };\n  \n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n  \n    // const handleChangeRowsPerPage = event => {\n    //   setRowsPerPage(parseInt(event.target.value, 10));\n    //   setPage(0);\n    // };\n  \n    const handleChangeDense = event => {\n      setDense(event.target.checked);\n    };\n  \n    const isSelected = name => selected.indexOf(name) !== -1;\n  \n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  \n    return (\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <EnhancedTableToolbar numSelected={selected.length} />\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              size={dense ? 'small' : 'medium'}\n              aria-label=\"enhanced table\"\n            >\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                //onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rows.length}\n              />\n              <TableBody>\n                {stableSort(rows, getComparator(order, orderBy))\n                //   .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row.name);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n  \n                    return (\n                      <TableRow\n                        hover\n                        onClick={event => handleClick(event, row.name)}\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.name}\n                        selected={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox\n                            checked={isItemSelected}\n                            inputProps={{ 'aria-labelledby': labelId }}\n                          />\n                        </TableCell>\n                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                          {row.name}\n                        </TableCell>\n                        <TableCell align=\"left\">{row.ticker}</TableCell>\n                        <TableCell align=\"right\">{row.sentiment}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 20, 30]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            // onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        <FormControlLabel\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\n          label=\"Dense padding\"\n        />\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}